Terminals unused in grammar

    SEMICOLON
    READINT
    READREAL
    READSTRING
    VECTOR
    TUPLE
    INVALID_CHARACTER


State 8 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Program Statement
    2        | ε

    3 Statement: Declaration
    4          | Assignment
    5          | If
    6          | Loop
    7          | Return
    8          | Print

    9 Declaration: VAR VariableDefinition
   10            | FunctionDeclaration

   11 FunctionDeclaration: FUNC LPAREN OptIdentifierList RPAREN FunBody

   12 VariableDefinition: IDENT
   13                   | IDENT ASSIGN Expression
   14                   | IDENT ASSIGN FunctionDeclaration

   15 Assignment: Reference ASSIGN Expression

   16 If: IF Expression THEN Body END
   17   | IF Expression THEN Body ELSE Body END

   18 Loop: WHILE Expression LOOP Body END
   19     | FOR IDENT IN Expression RANGE Expression LOOP Body END

   20 Return: RETURN
   21       | RETURN Expression

   22 Print: PRINT Expression

   23 Body: Body Statement
   24     | ε

   25 Expression: Relation
   26           | Expression AND Relation
   27           | Expression OR Relation
   28           | Expression XOR Relation

   29 Relation: Factor
   30         | Relation LT Factor
   31         | Relation LE Factor
   32         | Relation GT Factor
   33         | Relation GE Factor
   34         | Relation EQ Factor
   35         | Relation NEQ Factor

   36 Factor: Term
   37       | Factor PLUS Term
   38       | Factor MINUS Term

   39 Term: Unary
   40     | Term MUL Unary
   41     | Term DIV Unary
   42     | Term MOD Unary

   43 Unary: Reference
   44      | Reference IS TypeIndicator
   45      | Primary
   46      | PLUS Primary
   47      | MINUS Primary
   48      | NOT Primary

   49 Primary: Literal
   50        | LPAREN Expression RPAREN
   51        | IDENT LPAREN ExpressionList RPAREN

   52 Literal: INTEGER
   53        | REAL
   54        | STRING
   55        | TRUE
   56        | FALSE
   57        | Tuple
   58        | Array
   59        | EMPTY

   60 Tuple: LBRACE TupleElementList RBRACE

   61 TupleElement: IDENT ASSIGN Expression
   62             | Expression

   63 TupleElementList: TupleElement
   64                 | TupleElement COMMA TupleElementList
   65                 | ε

   66 Array: LBRACKET ExpressionList RBRACKET

   67 ExpressionList: ExpressionList COMMA Expression
   68               | Expression
   69               | ε

   70 Reference: IDENT
   71          | Reference LBRACKET INTEGER RBRACKET
   72          | Reference DOT IDENT
   73          | Reference DOT INTEGER

   74 TypeIndicator: INT_TYPE
   75              | REAL_TYPE
   76              | BOOL_TYPE
   77              | STRING_TYPE
   78              | EMPTY
   79              | LBRACKET RBRACKET
   80              | LBRACE RBRACE
   81              | FUNC

   82 OptIdentifierList: IDENT
   83                  | IDENT COMMA OptIdentifierList
   84                  | ε

   85 FunBody: IS Body END
   86        | IMPLICATION Expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENT <value> (258) 12 13 14 19 51 61 70 72 82 83
    INTEGER (259) 52 71 73
    REAL (260) 53
    STRING (261) 54
    TRUE (262) 55
    FALSE (263) 56
    VAR (264) 9
    IF (265) 16 17
    THEN (266) 16 17
    ELSE (267) 17
    WHILE (268) 18
    FOR (269) 19
    IN (270) 19
    RETURN (271) 20 21
    PRINT (272) 22
    AND (273) 26
    OR (274) 27
    XOR (275) 28
    NOT (276) 48
    IS (277) 44 85
    ASSIGN (278) 13 14 15 61
    PLUS (279) 37 46
    MINUS (280) 38 47
    MUL (281) 40
    DIV (282) 41
    LT (283) 30
    LE (284) 31
    GT (285) 32
    GE (286) 33
    EQ (287) 34
    NEQ (288) 35
    LPAREN (289) 11 50 51
    RPAREN (290) 11 50 51
    LBRACE (291) 60 80
    RBRACE (292) 60 80
    LBRACKET (293) 66 71 79
    RBRACKET (294) 66 71 79
    COMMA (295) 64 67 83
    SEMICOLON (296)
    READINT (297)
    READREAL (298)
    READSTRING (299)
    LOOP (300) 18 19
    DOT (301) 72 73
    END (302) 16 17 18 19 85
    INT_TYPE (303) 74
    REAL_TYPE (304) 75
    BOOL_TYPE (305) 76
    STRING_TYPE (306) 77
    EMPTY (307) 59 78
    VECTOR (308)
    TUPLE (309)
    FUNC (310) 11 81
    INVALID_CHARACTER (311)
    RANGE (312) 19
    IMPLICATION (313) 86
    MOD (314) 42


Nonterminals, with rules where they appear

    $accept (60)
        on left: 0
    Program <node> (61)
        on left: 1 2
        on right: 0 1
    Statement <node> (62)
        on left: 3 4 5 6 7 8
        on right: 1 23
    Declaration <node> (63)
        on left: 9 10
        on right: 3
    FunctionDeclaration (64)
        on left: 11
        on right: 10 14
    VariableDefinition <node> (65)
        on left: 12 13 14
        on right: 9
    Assignment <node> (66)
        on left: 15
        on right: 4
    If <node> (67)
        on left: 16 17
        on right: 5
    Loop <node> (68)
        on left: 18 19
        on right: 6
    Return <node> (69)
        on left: 20 21
        on right: 7
    Print <node> (70)
        on left: 22
        on right: 8
    Body <node> (71)
        on left: 23 24
        on right: 16 17 18 19 23 85
    Expression <node> (72)
        on left: 25 26 27 28
        on right: 13 15 16 17 18 19 21 22 26 27 28 50 61 62 67 68 86
    Relation <node> (73)
        on left: 29 30 31 32 33 34 35
        on right: 25 26 27 28 30 31 32 33 34 35
    Factor <node> (74)
        on left: 36 37 38
        on right: 29 30 31 32 33 34 35 37 38
    Term <node> (75)
        on left: 39 40 41 42
        on right: 36 37 38 40 41 42
    Unary <node> (76)
        on left: 43 44 45 46 47 48
        on right: 39 40 41 42
    Primary <node> (77)
        on left: 49 50 51
        on right: 45 46 47 48
    Literal <node> (78)
        on left: 52 53 54 55 56 57 58 59
        on right: 49
    Tuple (79)
        on left: 60
        on right: 57
    TupleElement (80)
        on left: 61 62
        on right: 63 64
    TupleElementList (81)
        on left: 63 64 65
        on right: 60 64
    Array <node> (82)
        on left: 66
        on right: 58
    ExpressionList <node> (83)
        on left: 67 68 69
        on right: 51 66 67
    Reference <node> (84)
        on left: 70 71 72 73
        on right: 15 43 44 71 72 73
    TypeIndicator (85)
        on left: 74 75 76 77 78 79 80 81
        on right: 44
    OptIdentifierList (86)
        on left: 82 83 84
        on right: 11 83
    FunBody (87)
        on left: 85 86
        on right: 11


State 0

    0 $accept: • Program $end

    $default  reduce using rule 2 (Program)

    Program  go to state 1


State 1

    0 $accept: Program • $end
    1 Program: Program • Statement

    $end    shift, and go to state 2
    IDENT   shift, and go to state 3
    VAR     shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    RETURN  shift, and go to state 8
    PRINT   shift, and go to state 9
    FUNC    shift, and go to state 10

    Statement            go to state 11
    Declaration          go to state 12
    FunctionDeclaration  go to state 13
    Assignment           go to state 14
    If                   go to state 15
    Loop                 go to state 16
    Return               go to state 17
    Print                go to state 18
    Reference            go to state 19


State 2

    0 $accept: Program $end •

    $default  accept


State 3

   70 Reference: IDENT •

    $default  reduce using rule 70 (Reference)


State 4

    9 Declaration: VAR • VariableDefinition

    IDENT  shift, and go to state 20

    VariableDefinition  go to state 21


State 5

   16 If: IF • Expression THEN Body END
   17   | IF • Expression THEN Body ELSE Body END

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Expression  go to state 35
    Relation    go to state 36
    Factor      go to state 37
    Term        go to state 38
    Unary       go to state 39
    Primary     go to state 40
    Literal     go to state 41
    Tuple       go to state 42
    Array       go to state 43
    Reference   go to state 44


State 6

   18 Loop: WHILE • Expression LOOP Body END

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Expression  go to state 45
    Relation    go to state 36
    Factor      go to state 37
    Term        go to state 38
    Unary       go to state 39
    Primary     go to state 40
    Literal     go to state 41
    Tuple       go to state 42
    Array       go to state 43
    Reference   go to state 44


State 7

   19 Loop: FOR • IDENT IN Expression RANGE Expression LOOP Body END

    IDENT  shift, and go to state 46


State 8

   20 Return: RETURN •
   21       | RETURN • Expression

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    IDENT     [reduce using rule 20 (Return)]
    $default  reduce using rule 20 (Return)

    Expression  go to state 47
    Relation    go to state 36
    Factor      go to state 37
    Term        go to state 38
    Unary       go to state 39
    Primary     go to state 40
    Literal     go to state 41
    Tuple       go to state 42
    Array       go to state 43
    Reference   go to state 44


State 9

   22 Print: PRINT • Expression

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Expression  go to state 48
    Relation    go to state 36
    Factor      go to state 37
    Term        go to state 38
    Unary       go to state 39
    Primary     go to state 40
    Literal     go to state 41
    Tuple       go to state 42
    Array       go to state 43
    Reference   go to state 44


State 10

   11 FunctionDeclaration: FUNC • LPAREN OptIdentifierList RPAREN FunBody

    LPAREN  shift, and go to state 49


State 11

    1 Program: Program Statement •

    $default  reduce using rule 1 (Program)


State 12

    3 Statement: Declaration •

    $default  reduce using rule 3 (Statement)


State 13

   10 Declaration: FunctionDeclaration •

    $default  reduce using rule 10 (Declaration)


State 14

    4 Statement: Assignment •

    $default  reduce using rule 4 (Statement)


State 15

    5 Statement: If •

    $default  reduce using rule 5 (Statement)


State 16

    6 Statement: Loop •

    $default  reduce using rule 6 (Statement)


State 17

    7 Statement: Return •

    $default  reduce using rule 7 (Statement)


State 18

    8 Statement: Print •

    $default  reduce using rule 8 (Statement)


State 19

   15 Assignment: Reference • ASSIGN Expression
   71 Reference: Reference • LBRACKET INTEGER RBRACKET
   72          | Reference • DOT IDENT
   73          | Reference • DOT INTEGER

    ASSIGN    shift, and go to state 50
    LBRACKET  shift, and go to state 51
    DOT       shift, and go to state 52


State 20

   12 VariableDefinition: IDENT •
   13                   | IDENT • ASSIGN Expression
   14                   | IDENT • ASSIGN FunctionDeclaration

    ASSIGN  shift, and go to state 53

    $default  reduce using rule 12 (VariableDefinition)


State 21

    9 Declaration: VAR VariableDefinition •

    $default  reduce using rule 9 (Declaration)


State 22

   51 Primary: IDENT • LPAREN ExpressionList RPAREN
   70 Reference: IDENT •

    LPAREN  shift, and go to state 54

    $default  reduce using rule 70 (Reference)


State 23

   52 Literal: INTEGER •

    $default  reduce using rule 52 (Literal)


State 24

   53 Literal: REAL •

    $default  reduce using rule 53 (Literal)


State 25

   54 Literal: STRING •

    $default  reduce using rule 54 (Literal)


State 26

   55 Literal: TRUE •

    $default  reduce using rule 55 (Literal)


State 27

   56 Literal: FALSE •

    $default  reduce using rule 56 (Literal)


State 28

   48 Unary: NOT • Primary

    IDENT     shift, and go to state 55
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Primary  go to state 56
    Literal  go to state 41
    Tuple    go to state 42
    Array    go to state 43


State 29

   46 Unary: PLUS • Primary

    IDENT     shift, and go to state 55
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Primary  go to state 57
    Literal  go to state 41
    Tuple    go to state 42
    Array    go to state 43


State 30

   47 Unary: MINUS • Primary

    IDENT     shift, and go to state 55
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Primary  go to state 58
    Literal  go to state 41
    Tuple    go to state 42
    Array    go to state 43


State 31

   50 Primary: LPAREN • Expression RPAREN

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Expression  go to state 59
    Relation    go to state 36
    Factor      go to state 37
    Term        go to state 38
    Unary       go to state 39
    Primary     go to state 40
    Literal     go to state 41
    Tuple       go to state 42
    Array       go to state 43
    Reference   go to state 44


State 32

   60 Tuple: LBRACE • TupleElementList RBRACE

    IDENT     shift, and go to state 60
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    $default  reduce using rule 65 (TupleElementList)

    Expression        go to state 61
    Relation          go to state 36
    Factor            go to state 37
    Term              go to state 38
    Unary             go to state 39
    Primary           go to state 40
    Literal           go to state 41
    Tuple             go to state 42
    TupleElement      go to state 62
    TupleElementList  go to state 63
    Array             go to state 43
    Reference         go to state 44


State 33

   66 Array: LBRACKET • ExpressionList RBRACKET

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    $default  reduce using rule 69 (ExpressionList)

    Expression      go to state 64
    Relation        go to state 36
    Factor          go to state 37
    Term            go to state 38
    Unary           go to state 39
    Primary         go to state 40
    Literal         go to state 41
    Tuple           go to state 42
    Array           go to state 43
    ExpressionList  go to state 65
    Reference       go to state 44


State 34

   59 Literal: EMPTY •

    $default  reduce using rule 59 (Literal)


State 35

   16 If: IF Expression • THEN Body END
   17   | IF Expression • THEN Body ELSE Body END
   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation

    THEN  shift, and go to state 66
    AND   shift, and go to state 67
    OR    shift, and go to state 68
    XOR   shift, and go to state 69


State 36

   25 Expression: Relation •
   30 Relation: Relation • LT Factor
   31         | Relation • LE Factor
   32         | Relation • GT Factor
   33         | Relation • GE Factor
   34         | Relation • EQ Factor
   35         | Relation • NEQ Factor

    LT   shift, and go to state 70
    LE   shift, and go to state 71
    GT   shift, and go to state 72
    GE   shift, and go to state 73
    EQ   shift, and go to state 74
    NEQ  shift, and go to state 75

    $default  reduce using rule 25 (Expression)


State 37

   29 Relation: Factor •
   37 Factor: Factor • PLUS Term
   38       | Factor • MINUS Term

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 29 (Relation)


State 38

   36 Factor: Term •
   40 Term: Term • MUL Unary
   41     | Term • DIV Unary
   42     | Term • MOD Unary

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    MOD  shift, and go to state 80

    $default  reduce using rule 36 (Factor)


State 39

   39 Term: Unary •

    $default  reduce using rule 39 (Term)


State 40

   45 Unary: Primary •

    $default  reduce using rule 45 (Unary)


State 41

   49 Primary: Literal •

    $default  reduce using rule 49 (Primary)


State 42

   57 Literal: Tuple •

    $default  reduce using rule 57 (Literal)


State 43

   58 Literal: Array •

    $default  reduce using rule 58 (Literal)


State 44

   43 Unary: Reference •
   44      | Reference • IS TypeIndicator
   71 Reference: Reference • LBRACKET INTEGER RBRACKET
   72          | Reference • DOT IDENT
   73          | Reference • DOT INTEGER

    IS        shift, and go to state 81
    LBRACKET  shift, and go to state 51
    DOT       shift, and go to state 52

    $default  reduce using rule 43 (Unary)


State 45

   18 Loop: WHILE Expression • LOOP Body END
   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation

    AND   shift, and go to state 67
    OR    shift, and go to state 68
    XOR   shift, and go to state 69
    LOOP  shift, and go to state 82


State 46

   19 Loop: FOR IDENT • IN Expression RANGE Expression LOOP Body END

    IN  shift, and go to state 83


State 47

   21 Return: RETURN Expression •
   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    XOR  shift, and go to state 69

    $default  reduce using rule 21 (Return)


State 48

   22 Print: PRINT Expression •
   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    XOR  shift, and go to state 69

    $default  reduce using rule 22 (Print)


State 49

   11 FunctionDeclaration: FUNC LPAREN • OptIdentifierList RPAREN FunBody

    IDENT  shift, and go to state 84

    $default  reduce using rule 84 (OptIdentifierList)

    OptIdentifierList  go to state 85


State 50

   15 Assignment: Reference ASSIGN • Expression

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Expression  go to state 86
    Relation    go to state 36
    Factor      go to state 37
    Term        go to state 38
    Unary       go to state 39
    Primary     go to state 40
    Literal     go to state 41
    Tuple       go to state 42
    Array       go to state 43
    Reference   go to state 44


State 51

   71 Reference: Reference LBRACKET • INTEGER RBRACKET

    INTEGER  shift, and go to state 87


State 52

   72 Reference: Reference DOT • IDENT
   73          | Reference DOT • INTEGER

    IDENT    shift, and go to state 88
    INTEGER  shift, and go to state 89


State 53

   13 VariableDefinition: IDENT ASSIGN • Expression
   14                   | IDENT ASSIGN • FunctionDeclaration

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34
    FUNC      shift, and go to state 10

    FunctionDeclaration  go to state 90
    Expression           go to state 91
    Relation             go to state 36
    Factor               go to state 37
    Term                 go to state 38
    Unary                go to state 39
    Primary              go to state 40
    Literal              go to state 41
    Tuple                go to state 42
    Array                go to state 43
    Reference            go to state 44


State 54

   51 Primary: IDENT LPAREN • ExpressionList RPAREN

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    $default  reduce using rule 69 (ExpressionList)

    Expression      go to state 64
    Relation        go to state 36
    Factor          go to state 37
    Term            go to state 38
    Unary           go to state 39
    Primary         go to state 40
    Literal         go to state 41
    Tuple           go to state 42
    Array           go to state 43
    ExpressionList  go to state 92
    Reference       go to state 44


State 55

   51 Primary: IDENT • LPAREN ExpressionList RPAREN

    LPAREN  shift, and go to state 54


State 56

   48 Unary: NOT Primary •

    $default  reduce using rule 48 (Unary)


State 57

   46 Unary: PLUS Primary •

    $default  reduce using rule 46 (Unary)


State 58

   47 Unary: MINUS Primary •

    $default  reduce using rule 47 (Unary)


State 59

   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation
   50 Primary: LPAREN Expression • RPAREN

    AND     shift, and go to state 67
    OR      shift, and go to state 68
    XOR     shift, and go to state 69
    RPAREN  shift, and go to state 93


State 60

   51 Primary: IDENT • LPAREN ExpressionList RPAREN
   61 TupleElement: IDENT • ASSIGN Expression
   70 Reference: IDENT •

    ASSIGN  shift, and go to state 94
    LPAREN  shift, and go to state 54

    $default  reduce using rule 70 (Reference)


State 61

   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation
   62 TupleElement: Expression •

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    XOR  shift, and go to state 69

    $default  reduce using rule 62 (TupleElement)


State 62

   63 TupleElementList: TupleElement •
   64                 | TupleElement • COMMA TupleElementList

    COMMA  shift, and go to state 95

    $default  reduce using rule 63 (TupleElementList)


State 63

   60 Tuple: LBRACE TupleElementList • RBRACE

    RBRACE  shift, and go to state 96


State 64

   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation
   68 ExpressionList: Expression •

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    XOR  shift, and go to state 69

    $default  reduce using rule 68 (ExpressionList)


State 65

   66 Array: LBRACKET ExpressionList • RBRACKET
   67 ExpressionList: ExpressionList • COMMA Expression

    RBRACKET  shift, and go to state 97
    COMMA     shift, and go to state 98


State 66

   16 If: IF Expression THEN • Body END
   17   | IF Expression THEN • Body ELSE Body END

    $default  reduce using rule 24 (Body)

    Body  go to state 99


State 67

   26 Expression: Expression AND • Relation

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Relation   go to state 100
    Factor     go to state 37
    Term       go to state 38
    Unary      go to state 39
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 68

   27 Expression: Expression OR • Relation

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Relation   go to state 101
    Factor     go to state 37
    Term       go to state 38
    Unary      go to state 39
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 69

   28 Expression: Expression XOR • Relation

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Relation   go to state 102
    Factor     go to state 37
    Term       go to state 38
    Unary      go to state 39
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 70

   30 Relation: Relation LT • Factor

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Factor     go to state 103
    Term       go to state 38
    Unary      go to state 39
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 71

   31 Relation: Relation LE • Factor

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Factor     go to state 104
    Term       go to state 38
    Unary      go to state 39
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 72

   32 Relation: Relation GT • Factor

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Factor     go to state 105
    Term       go to state 38
    Unary      go to state 39
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 73

   33 Relation: Relation GE • Factor

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Factor     go to state 106
    Term       go to state 38
    Unary      go to state 39
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 74

   34 Relation: Relation EQ • Factor

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Factor     go to state 107
    Term       go to state 38
    Unary      go to state 39
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 75

   35 Relation: Relation NEQ • Factor

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Factor     go to state 108
    Term       go to state 38
    Unary      go to state 39
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 76

   37 Factor: Factor PLUS • Term

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Term       go to state 109
    Unary      go to state 39
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 77

   38 Factor: Factor MINUS • Term

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Term       go to state 110
    Unary      go to state 39
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 78

   40 Term: Term MUL • Unary

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Unary      go to state 111
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 79

   41 Term: Term DIV • Unary

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Unary      go to state 112
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 80

   42 Term: Term MOD • Unary

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Unary      go to state 113
    Primary    go to state 40
    Literal    go to state 41
    Tuple      go to state 42
    Array      go to state 43
    Reference  go to state 44


State 81

   44 Unary: Reference IS • TypeIndicator

    LBRACE       shift, and go to state 114
    LBRACKET     shift, and go to state 115
    INT_TYPE     shift, and go to state 116
    REAL_TYPE    shift, and go to state 117
    BOOL_TYPE    shift, and go to state 118
    STRING_TYPE  shift, and go to state 119
    EMPTY        shift, and go to state 120
    FUNC         shift, and go to state 121

    TypeIndicator  go to state 122


State 82

   18 Loop: WHILE Expression LOOP • Body END

    $default  reduce using rule 24 (Body)

    Body  go to state 123


State 83

   19 Loop: FOR IDENT IN • Expression RANGE Expression LOOP Body END

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Expression  go to state 124
    Relation    go to state 36
    Factor      go to state 37
    Term        go to state 38
    Unary       go to state 39
    Primary     go to state 40
    Literal     go to state 41
    Tuple       go to state 42
    Array       go to state 43
    Reference   go to state 44


State 84

   82 OptIdentifierList: IDENT •
   83                  | IDENT • COMMA OptIdentifierList

    COMMA  shift, and go to state 125

    $default  reduce using rule 82 (OptIdentifierList)


State 85

   11 FunctionDeclaration: FUNC LPAREN OptIdentifierList • RPAREN FunBody

    RPAREN  shift, and go to state 126


State 86

   15 Assignment: Reference ASSIGN Expression •
   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    XOR  shift, and go to state 69

    $default  reduce using rule 15 (Assignment)


State 87

   71 Reference: Reference LBRACKET INTEGER • RBRACKET

    RBRACKET  shift, and go to state 127


State 88

   72 Reference: Reference DOT IDENT •

    $default  reduce using rule 72 (Reference)


State 89

   73 Reference: Reference DOT INTEGER •

    $default  reduce using rule 73 (Reference)


State 90

   14 VariableDefinition: IDENT ASSIGN FunctionDeclaration •

    $default  reduce using rule 14 (VariableDefinition)


State 91

   13 VariableDefinition: IDENT ASSIGN Expression •
   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    XOR  shift, and go to state 69

    $default  reduce using rule 13 (VariableDefinition)


State 92

   51 Primary: IDENT LPAREN ExpressionList • RPAREN
   67 ExpressionList: ExpressionList • COMMA Expression

    RPAREN  shift, and go to state 128
    COMMA   shift, and go to state 98


State 93

   50 Primary: LPAREN Expression RPAREN •

    $default  reduce using rule 50 (Primary)


State 94

   61 TupleElement: IDENT ASSIGN • Expression

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Expression  go to state 129
    Relation    go to state 36
    Factor      go to state 37
    Term        go to state 38
    Unary       go to state 39
    Primary     go to state 40
    Literal     go to state 41
    Tuple       go to state 42
    Array       go to state 43
    Reference   go to state 44


State 95

   64 TupleElementList: TupleElement COMMA • TupleElementList

    IDENT     shift, and go to state 60
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    $default  reduce using rule 65 (TupleElementList)

    Expression        go to state 61
    Relation          go to state 36
    Factor            go to state 37
    Term              go to state 38
    Unary             go to state 39
    Primary           go to state 40
    Literal           go to state 41
    Tuple             go to state 42
    TupleElement      go to state 62
    TupleElementList  go to state 130
    Array             go to state 43
    Reference         go to state 44


State 96

   60 Tuple: LBRACE TupleElementList RBRACE •

    $default  reduce using rule 60 (Tuple)


State 97

   66 Array: LBRACKET ExpressionList RBRACKET •

    $default  reduce using rule 66 (Array)


State 98

   67 ExpressionList: ExpressionList COMMA • Expression

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Expression  go to state 131
    Relation    go to state 36
    Factor      go to state 37
    Term        go to state 38
    Unary       go to state 39
    Primary     go to state 40
    Literal     go to state 41
    Tuple       go to state 42
    Array       go to state 43
    Reference   go to state 44


State 99

   16 If: IF Expression THEN Body • END
   17   | IF Expression THEN Body • ELSE Body END
   23 Body: Body • Statement

    IDENT   shift, and go to state 3
    VAR     shift, and go to state 4
    IF      shift, and go to state 5
    ELSE    shift, and go to state 132
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    RETURN  shift, and go to state 8
    PRINT   shift, and go to state 9
    END     shift, and go to state 133
    FUNC    shift, and go to state 10

    Statement            go to state 134
    Declaration          go to state 12
    FunctionDeclaration  go to state 13
    Assignment           go to state 14
    If                   go to state 15
    Loop                 go to state 16
    Return               go to state 17
    Print                go to state 18
    Reference            go to state 19


State 100

   26 Expression: Expression AND Relation •
   30 Relation: Relation • LT Factor
   31         | Relation • LE Factor
   32         | Relation • GT Factor
   33         | Relation • GE Factor
   34         | Relation • EQ Factor
   35         | Relation • NEQ Factor

    LT   shift, and go to state 70
    LE   shift, and go to state 71
    GT   shift, and go to state 72
    GE   shift, and go to state 73
    EQ   shift, and go to state 74
    NEQ  shift, and go to state 75

    $default  reduce using rule 26 (Expression)


State 101

   27 Expression: Expression OR Relation •
   30 Relation: Relation • LT Factor
   31         | Relation • LE Factor
   32         | Relation • GT Factor
   33         | Relation • GE Factor
   34         | Relation • EQ Factor
   35         | Relation • NEQ Factor

    LT   shift, and go to state 70
    LE   shift, and go to state 71
    GT   shift, and go to state 72
    GE   shift, and go to state 73
    EQ   shift, and go to state 74
    NEQ  shift, and go to state 75

    $default  reduce using rule 27 (Expression)


State 102

   28 Expression: Expression XOR Relation •
   30 Relation: Relation • LT Factor
   31         | Relation • LE Factor
   32         | Relation • GT Factor
   33         | Relation • GE Factor
   34         | Relation • EQ Factor
   35         | Relation • NEQ Factor

    LT   shift, and go to state 70
    LE   shift, and go to state 71
    GT   shift, and go to state 72
    GE   shift, and go to state 73
    EQ   shift, and go to state 74
    NEQ  shift, and go to state 75

    $default  reduce using rule 28 (Expression)


State 103

   30 Relation: Relation LT Factor •
   37 Factor: Factor • PLUS Term
   38       | Factor • MINUS Term

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 30 (Relation)


State 104

   31 Relation: Relation LE Factor •
   37 Factor: Factor • PLUS Term
   38       | Factor • MINUS Term

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 31 (Relation)


State 105

   32 Relation: Relation GT Factor •
   37 Factor: Factor • PLUS Term
   38       | Factor • MINUS Term

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 32 (Relation)


State 106

   33 Relation: Relation GE Factor •
   37 Factor: Factor • PLUS Term
   38       | Factor • MINUS Term

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 33 (Relation)


State 107

   34 Relation: Relation EQ Factor •
   37 Factor: Factor • PLUS Term
   38       | Factor • MINUS Term

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 34 (Relation)


State 108

   35 Relation: Relation NEQ Factor •
   37 Factor: Factor • PLUS Term
   38       | Factor • MINUS Term

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 35 (Relation)


State 109

   37 Factor: Factor PLUS Term •
   40 Term: Term • MUL Unary
   41     | Term • DIV Unary
   42     | Term • MOD Unary

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    MOD  shift, and go to state 80

    $default  reduce using rule 37 (Factor)


State 110

   38 Factor: Factor MINUS Term •
   40 Term: Term • MUL Unary
   41     | Term • DIV Unary
   42     | Term • MOD Unary

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    MOD  shift, and go to state 80

    $default  reduce using rule 38 (Factor)


State 111

   40 Term: Term MUL Unary •

    $default  reduce using rule 40 (Term)


State 112

   41 Term: Term DIV Unary •

    $default  reduce using rule 41 (Term)


State 113

   42 Term: Term MOD Unary •

    $default  reduce using rule 42 (Term)


State 114

   80 TypeIndicator: LBRACE • RBRACE

    RBRACE  shift, and go to state 135


State 115

   79 TypeIndicator: LBRACKET • RBRACKET

    RBRACKET  shift, and go to state 136


State 116

   74 TypeIndicator: INT_TYPE •

    $default  reduce using rule 74 (TypeIndicator)


State 117

   75 TypeIndicator: REAL_TYPE •

    $default  reduce using rule 75 (TypeIndicator)


State 118

   76 TypeIndicator: BOOL_TYPE •

    $default  reduce using rule 76 (TypeIndicator)


State 119

   77 TypeIndicator: STRING_TYPE •

    $default  reduce using rule 77 (TypeIndicator)


State 120

   78 TypeIndicator: EMPTY •

    $default  reduce using rule 78 (TypeIndicator)


State 121

   81 TypeIndicator: FUNC •

    $default  reduce using rule 81 (TypeIndicator)


State 122

   44 Unary: Reference IS TypeIndicator •

    $default  reduce using rule 44 (Unary)


State 123

   18 Loop: WHILE Expression LOOP Body • END
   23 Body: Body • Statement

    IDENT   shift, and go to state 3
    VAR     shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    RETURN  shift, and go to state 8
    PRINT   shift, and go to state 9
    END     shift, and go to state 137
    FUNC    shift, and go to state 10

    Statement            go to state 134
    Declaration          go to state 12
    FunctionDeclaration  go to state 13
    Assignment           go to state 14
    If                   go to state 15
    Loop                 go to state 16
    Return               go to state 17
    Print                go to state 18
    Reference            go to state 19


State 124

   19 Loop: FOR IDENT IN Expression • RANGE Expression LOOP Body END
   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation

    AND    shift, and go to state 67
    OR     shift, and go to state 68
    XOR    shift, and go to state 69
    RANGE  shift, and go to state 138


State 125

   83 OptIdentifierList: IDENT COMMA • OptIdentifierList

    IDENT  shift, and go to state 84

    $default  reduce using rule 84 (OptIdentifierList)

    OptIdentifierList  go to state 139


State 126

   11 FunctionDeclaration: FUNC LPAREN OptIdentifierList RPAREN • FunBody

    IS           shift, and go to state 140
    IMPLICATION  shift, and go to state 141

    FunBody  go to state 142


State 127

   71 Reference: Reference LBRACKET INTEGER RBRACKET •

    $default  reduce using rule 71 (Reference)


State 128

   51 Primary: IDENT LPAREN ExpressionList RPAREN •

    $default  reduce using rule 51 (Primary)


State 129

   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation
   61 TupleElement: IDENT ASSIGN Expression •

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    XOR  shift, and go to state 69

    $default  reduce using rule 61 (TupleElement)


State 130

   64 TupleElementList: TupleElement COMMA TupleElementList •

    $default  reduce using rule 64 (TupleElementList)


State 131

   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation
   67 ExpressionList: ExpressionList COMMA Expression •

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    XOR  shift, and go to state 69

    $default  reduce using rule 67 (ExpressionList)


State 132

   17 If: IF Expression THEN Body ELSE • Body END

    $default  reduce using rule 24 (Body)

    Body  go to state 143


State 133

   16 If: IF Expression THEN Body END •

    $default  reduce using rule 16 (If)


State 134

   23 Body: Body Statement •

    $default  reduce using rule 23 (Body)


State 135

   80 TypeIndicator: LBRACE RBRACE •

    $default  reduce using rule 80 (TypeIndicator)


State 136

   79 TypeIndicator: LBRACKET RBRACKET •

    $default  reduce using rule 79 (TypeIndicator)


State 137

   18 Loop: WHILE Expression LOOP Body END •

    $default  reduce using rule 18 (Loop)


State 138

   19 Loop: FOR IDENT IN Expression RANGE • Expression LOOP Body END

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Expression  go to state 144
    Relation    go to state 36
    Factor      go to state 37
    Term        go to state 38
    Unary       go to state 39
    Primary     go to state 40
    Literal     go to state 41
    Tuple       go to state 42
    Array       go to state 43
    Reference   go to state 44


State 139

   83 OptIdentifierList: IDENT COMMA OptIdentifierList •

    $default  reduce using rule 83 (OptIdentifierList)


State 140

   85 FunBody: IS • Body END

    $default  reduce using rule 24 (Body)

    Body  go to state 145


State 141

   86 FunBody: IMPLICATION • Expression

    IDENT     shift, and go to state 22
    INTEGER   shift, and go to state 23
    REAL      shift, and go to state 24
    STRING    shift, and go to state 25
    TRUE      shift, and go to state 26
    FALSE     shift, and go to state 27
    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LPAREN    shift, and go to state 31
    LBRACE    shift, and go to state 32
    LBRACKET  shift, and go to state 33
    EMPTY     shift, and go to state 34

    Expression  go to state 146
    Relation    go to state 36
    Factor      go to state 37
    Term        go to state 38
    Unary       go to state 39
    Primary     go to state 40
    Literal     go to state 41
    Tuple       go to state 42
    Array       go to state 43
    Reference   go to state 44


State 142

   11 FunctionDeclaration: FUNC LPAREN OptIdentifierList RPAREN FunBody •

    $default  reduce using rule 11 (FunctionDeclaration)


State 143

   17 If: IF Expression THEN Body ELSE Body • END
   23 Body: Body • Statement

    IDENT   shift, and go to state 3
    VAR     shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    RETURN  shift, and go to state 8
    PRINT   shift, and go to state 9
    END     shift, and go to state 147
    FUNC    shift, and go to state 10

    Statement            go to state 134
    Declaration          go to state 12
    FunctionDeclaration  go to state 13
    Assignment           go to state 14
    If                   go to state 15
    Loop                 go to state 16
    Return               go to state 17
    Print                go to state 18
    Reference            go to state 19


State 144

   19 Loop: FOR IDENT IN Expression RANGE Expression • LOOP Body END
   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation

    AND   shift, and go to state 67
    OR    shift, and go to state 68
    XOR   shift, and go to state 69
    LOOP  shift, and go to state 148


State 145

   23 Body: Body • Statement
   85 FunBody: IS Body • END

    IDENT   shift, and go to state 3
    VAR     shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    RETURN  shift, and go to state 8
    PRINT   shift, and go to state 9
    END     shift, and go to state 149
    FUNC    shift, and go to state 10

    Statement            go to state 134
    Declaration          go to state 12
    FunctionDeclaration  go to state 13
    Assignment           go to state 14
    If                   go to state 15
    Loop                 go to state 16
    Return               go to state 17
    Print                go to state 18
    Reference            go to state 19


State 146

   26 Expression: Expression • AND Relation
   27           | Expression • OR Relation
   28           | Expression • XOR Relation
   86 FunBody: IMPLICATION Expression •

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    XOR  shift, and go to state 69

    $default  reduce using rule 86 (FunBody)


State 147

   17 If: IF Expression THEN Body ELSE Body END •

    $default  reduce using rule 17 (If)


State 148

   19 Loop: FOR IDENT IN Expression RANGE Expression LOOP • Body END

    $default  reduce using rule 24 (Body)

    Body  go to state 150


State 149

   85 FunBody: IS Body END •

    $default  reduce using rule 85 (FunBody)


State 150

   19 Loop: FOR IDENT IN Expression RANGE Expression LOOP Body • END
   23 Body: Body • Statement

    IDENT   shift, and go to state 3
    VAR     shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    RETURN  shift, and go to state 8
    PRINT   shift, and go to state 9
    END     shift, and go to state 151
    FUNC    shift, and go to state 10

    Statement            go to state 134
    Declaration          go to state 12
    FunctionDeclaration  go to state 13
    Assignment           go to state 14
    If                   go to state 15
    Loop                 go to state 16
    Return               go to state 17
    Print                go to state 18
    Reference            go to state 19


State 151

   19 Loop: FOR IDENT IN Expression RANGE Expression LOOP Body END •

    $default  reduce using rule 19 (Loop)
